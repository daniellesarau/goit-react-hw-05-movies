{"version":3,"file":"static/js/944.4e84a20c.chunk.js","mappings":"mTAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,qCAAwCF,IAD1D,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBJ,EAAAA,EAAAA,IAAA,+BACGF,EADH,4DAC8DM,IAFhF,cACCH,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBN,EAAAA,EAAAA,IAAA,gBACZM,EADY,oBACER,EADF,oBADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,uFACkBN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACUR,EADV,oBADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAmCF,GAAnC,uFACkBN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACUR,EADV,oBADlB,cACCG,EADD,yBAIEA,EAASC,MAJX,kEA5BPF,EAAAA,EAAAA,SAAAA,QAAyB,+B,gHCFzB,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA8E,sBAA9E,EAA8G,sBAA9G,EAAgJ,wBAAhJ,EAA+K,mB,+DC0C/K,MAhCA,WACE,OAAkCS,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACSP,EAAAA,EAAAA,IAAiBK,GAE/BG,MAAK,SAAAb,GACJS,EAAaT,EAAKc,KACnB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACN,IACwB,IAArBF,EAAUW,QACf,uBAAG,uCAEH,eAAIC,UAAWC,EAAf,SACGb,EAAUc,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAvB,EAAkCrB,GAAlC,OACb,gBAAIgB,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXK,IAAKH,EAtBA,kCAsB0BA,EAAeP,EAC9CW,IAAKH,KAEP,iBAAKJ,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAAyBG,KACzB,eAAGJ,UAAWC,EAAd,UAA6B,cAAYI,UCjBjC,eAACG,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAC5B,EAAI6B,GAWvD,OARE7B,IAFF6B,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CDSkBG,GADjB,KAepB,C","sources":["components/API/Api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9c7c7d46b918ae57eb105853aba2f0ba';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function trendingMovie() {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n}\n\nexport async function searchMovie(value) {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${value}`\n  );\n  return response.data;\n}\n\nexport async function movieDetails(id) {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieDetailsCast(id) {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieDetailsReviews(id) {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"profile\":\"Cast_profile__m8TAO\",\"details\":\"Cast_details__88pxz\",\"character\":\"Cast_character__tKDlA\",\"name\":\"Cast_name__6UbFm\"};","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport { movieDetailsCast } from '../API/Api';\nimport css from './Cast.module.css';\n\nimport error from '../Images/nophoto.png';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nfunction Cast() {\n  const [dataMovie, setDataMovie] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const response = movieDetailsCast(movieId);\n    response\n      .then(data => {\n        setDataMovie(data.cast);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n  return dataMovie.length === 0 ? (\n    <p>Sorry, we don't have information!</p>\n  ) : (\n    <ul className={css.list}>\n      {dataMovie.map(({ profile_path, name, character, id }) => (\n        <li className={css.item} key={nanoid()}>\n          <img\n            className={css.profile}\n            src={profile_path ? BASE_URL + profile_path : error}\n            alt={name}\n          />\n          <div className={css.details}>\n            <p className={css.name}>{name}</p>\n            <p className={css.character}>Character: {character}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\nexport default Cast;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["API_KEY","trendingMovie","axios","response","data","searchMovie","value","movieDetails","id","movieDetailsCast","movieDetailsReviews","useState","dataMovie","setDataMovie","movieId","useParams","useEffect","then","cast","catch","error","console","log","length","className","css","map","profile_path","name","character","src","alt","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid"],"sourceRoot":""}